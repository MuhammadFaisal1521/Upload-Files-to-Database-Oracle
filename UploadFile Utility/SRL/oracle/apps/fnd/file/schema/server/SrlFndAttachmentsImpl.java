package SRL.oracle.apps.fnd.file.schema.server;

import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SrlFndAttachmentsImpl extends OAEntityImpl {
    public static final int TRANSACTIONID = 0;
    public static final int FILENAME = 1;
    public static final int FILESOURCE = 2;
    public static final int CREATIONDATE = 3;
    public static final int CREATEDBY = 4;
    public static final int LASTUPDATEDBY = 5;
    public static final int LASTUPDATELOGIN = 6;
    public static final int LASTUPDATEDATE = 7;
    public static final int FORMNAME = 8;
    public static final int CONTENTTYPE = 9;
    public static final int ATTACHMENTSID = 10;


    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SrlFndAttachmentsImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("SRL.oracle.apps.fnd.file.schema.server.SrlFndAttachments");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for TransactionId, using the alias name TransactionId
     */
    public Number getTransactionId() {
        return (Number)getAttributeInternal(TRANSACTIONID);
    }

    /**Sets <code>value</code> as the attribute value for TransactionId
     */
    public void setTransactionId(Number value) {
        setAttributeInternal(TRANSACTIONID, value);
    }

    /**Gets the attribute value for Filename, using the alias name Filename
     */
    public String getFilename() {
        return (String)getAttributeInternal(FILENAME);
    }

    /**Sets <code>value</code> as the attribute value for Filename
     */
    public void setFilename(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**Gets the attribute value for Filesource, using the alias name Filesource
     */
    public BlobDomain getFilesource() {
        return (BlobDomain)getAttributeInternal(FILESOURCE);
    }

    /**Sets <code>value</code> as the attribute value for Filesource
     */
    public void setFilesource(BlobDomain value) {
        setAttributeInternal(FILESOURCE, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for FormName, using the alias name FormName
     */
    public String getFormName() {
        return (String)getAttributeInternal(FORMNAME);
    }

    /**Sets <code>value</code> as the attribute value for FormName
     */
    public void setFormName(String value) {
        setAttributeInternal(FORMNAME, value);
    }

    /**Gets the attribute value for ContentType, using the alias name ContentType
     */
    public String getContentType() {
        return (String)getAttributeInternal(CONTENTTYPE);
    }

    /**Sets <code>value</code> as the attribute value for ContentType
     */
    public void setContentType(String value) {
        setAttributeInternal(CONTENTTYPE, value);
    }

    /**Gets the attribute value for AttachmentsId, using the alias name AttachmentsId
     */
    public Number getAttachmentsId() {
        return (Number)getAttributeInternal(ATTACHMENTSID);
    }

    /**Sets <code>value</code> as the attribute value for AttachmentsId
     */
    public void setAttachmentsId(Number value) {
        setAttributeInternal(ATTACHMENTSID, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case TRANSACTIONID:
            return getTransactionId();
        case FILENAME:
            return getFilename();
        case FILESOURCE:
            return getFilesource();
        case CREATIONDATE:
            return getCreationDate();
        case CREATEDBY:
            return getCreatedBy();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case FORMNAME:
            return getFormName();
        case CONTENTTYPE:
            return getContentType();
        case ATTACHMENTSID:
            return getAttachmentsId();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case TRANSACTIONID:
            setTransactionId((Number)value);
            return;
        case FILENAME:
            setFilename((String)value);
            return;
        case FILESOURCE:
            setFilesource((BlobDomain)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case FORMNAME:
            setFormName((String)value);
            return;
        case CONTENTTYPE:
            setContentType((String)value);
            return;
        case ATTACHMENTSID:
            setAttachmentsId((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number attachmentsId) {
        return new Key(new Object[]{attachmentsId});
    }
}
